# See tests/README.rst for instructions for using travis with developer builds.

language: python

sudo: false

python:
  - 'pypy'
  - '2.7'
  - '3.3'
  - '3.4'
  - '3.5'
  - '2.6'

# OSX builds do not yet support Python
os: linux

addons:
  apt:
    sources:
      - debian-sid
    packages:
      - libssl1.0.0
      - djvulibre-bin
      - liblua5.1-0-dev

before_install:
  # When PYSETUP_TEST_EXTRAS is not enabled, do not allow the
  # default 'install' step to install all dependencies listed in
  # requirements.txt to verify that a minimal install works as expected.
  # Instead install requests in the before_script step below.
  - if [[ "$PYSETUP_TEST_EXTRAS" != '1' ]]; then rm requirements.txt ; fi

  # pypy tests are twice as fast under nose vs pytest
  - if [[ "$TRAVIS_PYTHON_VERSION" == "pypy" ]]; then USE_NOSE=1; fi

  # When the env variable USE_NOSE or USE_PYTEST is set, the appropriate
  # tool is used, else PYTEST is taken as the default
  - if [[ "$PYSETUP_TEST_EXTRAS" != '1' && "$USE_NOSE" != '1' && "$USE_PYTEST" != '1' ]]; then
      export USE_PYTEST=1 ;
    fi

  - if [[ -z "$FAMILY" ]]; then FAMILY=test; fi
  - if [[ -z "$LANGUAGE" ]]; then LANGUAGE=test; fi

  - if [[ "$NO_NET" == '1' ]]; then
      echo "Running no tests requiring network access" ;
      echo "(however generate_family_file uses network)" ;
    fi

  - if [[ "$SITE_ONLY" == '1' ]]; then
      echo "Running site tests only code ${LANGUAGE} on family ${FAMILY}" ;
    fi

  - export GITHUB_USER=`echo $TRAVIS_REPO_SLUG | cut -d '/' -f 1`
  - mkdir ~/.python-eggs
  - chmod 700 ~/.python-eggs

  - if [[ "$GITHUB_USER" != "wikimedia" ]]; then
      export PYWIKIBOT2_TEST_WRITE_FAIL=1 ;
    fi

  - |  # Based on Vlad Frolov's MIT licensed https://github.com/travis-ci/travis-ci/issues/5027#issuecomment-170939193
    if [[ "$TRAVIS_PYTHON_VERSION" == "pypy" && "$PYPY_VERSION" != '' ]]; then
      export PYENV_ROOT="$HOME/.pyenv"
      if [[ -f "$PYENV_ROOT/bin/pyenv" ]]; then
        pushd "$PYENV_ROOT" && git pull && popd
      else
        rm -rf "$PYENV_ROOT" && git clone --depth 1 https://github.com/yyuu/pyenv.git "$PYENV_ROOT"
      fi
      "$PYENV_ROOT/bin/pyenv" install --skip-existing "pypy-$PYPY_VERSION"
      virtualenv --python="$PYENV_ROOT/versions/pypy-$PYPY_VERSION/bin/python" "$HOME/virtualenvs/pypy-$PYPY_VERSION"
      source "$HOME/virtualenvs/pypy-$PYPY_VERSION/bin/activate"
      python --version
    fi

before_script:
  - pip install -r dev-requirements.txt

script:
  # Install security packages for requests to support HTTPS in site_detect
  - if [[ "$PYSETUP_TEST_EXTRAS" != '1' && "$NO_NET" != '1' ]]; then
      pip install mwoauth -r requests-requirements.txt ;
    fi

  - mkdir ~/.pywikibot

  - python pwb.py generate_family_file 'https://wiki.musicbrainz.org/' musicbrainz 'n'
  - if [[ $FAMILY == 'wpbeta' ]]; then
      python -m generate_family_file 'http://'$LANGUAGE'.wikipedia.beta.wmflabs.org/' 'wpbeta' 'n' ;
    fi
  - if [[ $FAMILY == 'wsbeta' ]]; then
      python -m generate_family_file 'http://'$LANGUAGE'.wikisource.beta.wmflabs.org/' 'wsbeta' 'n' ;
    fi

  - python -W error::UserWarning -m generate_user_files -dir:~/.pywikibot/ -family:$FAMILY -lang:$LANGUAGE -v -user:"$PYWIKIBOT2_USERNAME"

  - if [[ -n "$USER_PASSWORD" && -n "$PYWIKIBOT2_USERNAME" ]]; then
      printf "usernames['wikipedia']['en'] = '%q'\n" "$PYWIKIBOT2_USERNAME" >> ~/.pywikibot/user-config.py ;
      printf "usernames['wikipedia']['test'] = '%q'\n" "$PYWIKIBOT2_USERNAME" >> ~/.pywikibot/user-config.py ;
      printf "usernames['wikidata']['test'] = '%q'\n" "$PYWIKIBOT2_USERNAME" >> ~/.pywikibot/user-config.py ;
      printf "usernames['commons']['commons'] = '%q'\n" "$PYWIKIBOT2_USERNAME" >> ~/.pywikibot/user-config.py ;
      printf "('%q', '%q')\n" "$PYWIKIBOT2_USERNAME" "$USER_PASSWORD" > ~/.pywikibot/passwordfile ;
      echo "import os" >> ~/.pywikibot/user-config.py ;
      echo "password_file = os.path.expanduser('~/.pywikibot/passwordfile')" >> ~/.pywikibot/user-config.py ;
    fi

  - if [[ -n "$OAUTH_DOMAIN" ]]; then
      if [[ -n "$OAUTH_PYWIKIBOT2_USERNAME" ]]; then
        printf "usernames['${FAMILY}']['${LANGUAGE}'] = '%q'\n" "$OAUTH_PYWIKIBOT2_USERNAME" >> ~/.pywikibot/user-config.py ;
      fi ;
      oauth_token_var="OAUTH_TOKENS_${FAMILY^^}_${LANGUAGE^^}" ;
      if [[ -n "${!oauth_token_var}" ]]; then
        printf "authenticate['${OAUTH_DOMAIN}'] = ('%s')\n" "${!oauth_token_var//:/', '}" >> ~/.pywikibot/user-config.py ;
      fi ;
    fi
  - echo "authenticate['wiki.musicbrainz.org'] = ('NOTSPAM', 'NOTSPAM')" >> ~/.pywikibot/user-config.py ;

  - echo "max_retries = 2" >> ~/.pywikibot/user-config.py
  - echo "maximum_GET_length = 5000" >> ~/.pywikibot/user-config.py
  - echo "console_encoding = 'utf8'" >> ~/.pywikibot/user-config.py

  - python -c "import setuptools; print(setuptools.__version__)"

  - if [[ "$USE_NOSE" == "1" ]]; then
      nosetests --version ;
      if [[ "$SITE_ONLY" == "1" ]]; then
        python setup.py nosetests --tests tests --verbosity=2 -a "family=$FAMILY,code=$LANGUAGE" --with-trim --with-coverage --cover-package=. ;
      elif [[ "$NO_NET" == "1" ]]; then
        python setup.py nosetests --tests tests --verbosity=2 -a "!net" --with-trim --with-coverage --cover-package=. ;
      else
        python setup.py nosetests --tests tests --verbosity=2 --with-trim --with-coverage --cover-package=. ;
      fi ;
    elif [[ "$USE_PYTEST" == "1" ]]; then
      py.test --version ;
      if [[ "$SITE_ONLY" == "1" ]]; then
        python setup.py pytest --addopts="-vvv -s --timeout=$TEST_TIMEOUT --cov=. -a \"family=='$FAMILY' and code=='$LANGUAGE'\"" ;
      elif [[ "$NO_NET" == "1" ]]; then
        python setup.py pytest --addopts="-vvv -s -a \"not net\" --timeout=$TEST_TIMEOUT --cov=." ;
      else
        python setup.py pytest --addopts="-vvv -s --timeout=$TEST_TIMEOUT --cov=." ;
      fi
    else
      coverage run setup.py test ;
    fi

after_success:
    codecov

after_failure:
    codecov

env:
  global:
    # This is the encrypted password for Wikimedia SUL user 'Pywikibot-test',
    # and is only decrypted by Travis when running builds of code merged into
    # the github repository 'wikimedia/pywikibot-core'.
    # See http://docs.travis-ci.com/user/encryption-keys/ for more information.
    - secure: kofInMlisiTBt9o/Ustc/vySlkKfxGzGCX2LwA1D2waym8sDTS0o5gMJ5LsrT/BUKwZbe1vLozPHqZrrkQvsdTml+DpZuotzdILs0m0f3BUoexEC6OON5IDljuxFyETrD1Ug44ih5Mc4lVFOdTcBzg501ZmswGwQrBvg/OyEFfE=
    - TEST_TIMEOUT: 300

  matrix:
    - LANGUAGE=en FAMILY=wikipedia PYWIKIBOT2_TEST_PROD_ONLY=1
    - LANGUAGE=zh FAMILY=wikisource PYSETUP_TEST_EXTRAS=1 PYWIKIBOT2_TEST_PROD_ONLY=1 PYWIKIBOT2_TEST_NO_RC=1

matrix:
  include:
    # Test the Ubuntu precise pypy (2.5) without network to skip cryptography
    - python: 'pypy'
      env: PYPY_VERSION=default NO_NET=1 USE_PYTEST=1
    - python: 'pypy'
      env: PYPY_VERSION=default NO_NET=1 USE_NOSE=1
    # Test the Ubuntu precise pypy (2.5) with network; fails with T136382
    - python: 'pypy'
      env: PYPY_VERSION=default
    - python: '2.7_with_system_site_packages'  # equivalent to virtualenv: system_site_packages: true
      env: LANGUAGE=he FAMILY=wikivoyage DIST=precise-sudo PYWIKIBOT2_TEST_NO_RC=1
      dist: precise
      sudo: required
      addons:
        apt:
          packages:
            - djvulibre-bin
            - graphviz
            - liblua5.1-0-dev
            - python-ipaddr
    - python: '2.7_with_system_site_packages'
      env: LANGUAGE=nb FAMILY=wikipedia DIST=trusty PYSETUP_TEST_EXTRAS=1
      dist: trusty
      sudo: required
      addons:
        apt:
          packages:
            - djvulibre-bin
            - graphviz
            - liblua5.1-0-dev
            - python-ipaddr
    - python: '2.7'
      env: LANGUAGE=en FAMILY=wpbeta SITE_ONLY=1 OAUTH_DOMAIN="en.wikipedia.beta.wmflabs.org"
    - python: '3.3'
      env: LANGUAGE=zh FAMILY=wpbeta SITE_ONLY=1 OAUTH_DOMAIN="zh.wikipedia.beta.wmflabs.org"
    - python: '3.4'
      env: LANGUAGE=en FAMILY=wsbeta SITE_ONLY=1
    - python: '2.7'
      env: LANGUAGE=wikia FAMILY=wikia PYWIKIBOT2_TEST_NO_RC=1
    - python: '3.3'
      env: LANGUAGE=en FAMILY=musicbrainz SITE_ONLY=1
    - python: '3.4'
      env: LANGUAGE=test FAMILY=wikipedia SITE_ONLY=1 OAUTH_DOMAIN="test.wikipedia.org"
    - python: '3.4'
      env: LANGUAGE=test FAMILY=wikidata SITE_ONLY=1
    - python: '3.4'
      env: LANGUAGE=ar FAMILY=wiktionary PYWIKIBOT2_TEST_NO_RC=1
    - python: '2.6'
      env: LANGUAGE=wikidata FAMILY=wikidata SITE_ONLY=1
    - python: 'pypy'
      env: PYPY_VERSION=5.1.1 PYSETUP_TEST_EXTRAS=1
    - python: 'pypy'
      env: PYPY_VERSION=5.0.1 PYSETUP_TEST_EXTRAS=1
    - python: 'pypy'
      env: PYPY_VERSION=4.0.1 PYSETUP_TEST_EXTRAS=1
    - python: 'pypy'
      env: PYPY_VERSION=2.6.1 PYSETUP_TEST_EXTRAS=1

notifications:
  email:
    recipients:
      - pywikibot-commits@lists.wikimedia.org
    on_success: always
    on_failure: always
  irc:
    channels:
      - "chat.freenode.net#pywikibot"
    on_success: change
    on_failure: change
    template:
      - "%{repository_slug}#%{build_number} (%{branch} - %{commit} : %{author}): %{message} %{build_url}"
